{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar Class = require('../../core/class');\n\nvar Transform = require('../../core/transform');\n\nvar Element = require('../../dom/dummy');\n\nvar CanvasNode = Class(Transform, Element, {\n  invalidate: function invalidate() {\n    if (this.parentNode) this.parentNode.invalidate();\n    if (this._layer) this._layerCache = null;\n    return this;\n  },\n  _place: function _place() {\n    this.invalidate();\n  },\n  _transform: function _transform() {\n    this.invalidate();\n  },\n  blend: function blend(opacity) {\n    if (opacity >= 1 && this._layer) this._layer = null;\n    this._opacity = opacity;\n    if (this.parentNode) this.parentNode.invalidate();\n    return this;\n  },\n  // visibility\n  hide: function hide() {\n    this._invisible = true;\n    if (this.parentNode) this.parentNode.invalidate();\n    return this;\n  },\n  show: function show() {\n    this._invisible = false;\n    if (this.parentNode) this.parentNode.invalidate();\n    return this;\n  },\n  // interaction\n  indicate: function indicate(cursor, tooltip) {\n    this._cursor = cursor;\n    this._tooltip = tooltip;\n    return this.invalidate();\n  },\n  hitTest: function hitTest(x, y) {\n    if (this._invisible) return null;\n    var point = this.inversePoint(x, y);\n    if (!point) return null;\n    return this.localHitTest(point.x, point.y);\n  },\n  // rendering\n  renderTo: function renderTo(context, xx, yx, xy, yy, x, y) {\n    var opacity = this._opacity;\n\n    if (opacity == null || opacity >= 1) {\n      return this.renderLayerTo(context, xx, yx, xy, yy, x, y);\n    } // Render to a compositing layer and cache it\n\n\n    var layer = this._layer,\n        canvas,\n        isDirty = true,\n        w = context.canvas.width,\n        h = context.canvas.height;\n\n    if (layer) {\n      layer.setTransform(1, 0, 0, 1, 0, 0);\n      canvas = layer.canvas;\n\n      if (canvas.width < w || canvas.height < h) {\n        canvas.width = w;\n        canvas.height = h;\n      } else {\n        var c = this._layerCache;\n\n        if (c && c.xx === xx && c.yx === yx && c.xy === xy && c.yy === yy && c.x === x && c.y === y) {\n          isDirty = false;\n        } else {\n          layer.clearRect(0, 0, w, h);\n        }\n      }\n    } else {\n      canvas = document.createElement('canvas');\n      canvas.width = w;\n      canvas.height = h;\n      this._layer = layer = canvas.getContext('2d');\n    }\n\n    if (isDirty) {\n      this.renderLayerTo(layer, xx, yx, xy, yy, x, y);\n      this._layerCache = {\n        xx: xx,\n        yx: yx,\n        xy: xy,\n        yy: yy,\n        x: x,\n        y: y\n      };\n    }\n\n    context.globalAlpha = opacity;\n    context.setTransform(1, 0, 0, 1, 0, 0);\n    context.drawImage(canvas, 0, 0, w, h, 0, 0, w, h);\n    context.globalAlpha = 1;\n  }\n});\nmodule.exports = CanvasNode;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CanvasNode, \"CanvasNode\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\node.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}