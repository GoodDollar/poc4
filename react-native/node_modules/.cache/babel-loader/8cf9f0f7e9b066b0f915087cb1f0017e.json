{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport modality from './modality';\n\nvar WebStyleSheet = function () {\n  function WebStyleSheet(id) {\n    _classCallCheck(this, WebStyleSheet);\n\n    this._cssRules = [];\n    this._sheet = null;\n    this._textContent = '';\n    var domStyleElement = void 0; // on the client we check for an existing style sheet before injecting\n\n    if (canUseDOM) {\n      domStyleElement = document.getElementById(id);\n\n      if (!domStyleElement) {\n        var html = '<style id=\"' + id + '\"></style>';\n\n        if (document.head) {\n          document.head.insertAdjacentHTML('afterbegin', html);\n          domStyleElement = document.getElementById(id);\n        }\n      }\n\n      if (domStyleElement) {\n        modality(domStyleElement); // $FlowFixMe\n\n        this._sheet = domStyleElement.sheet;\n        this._textContent = domStyleElement.textContent;\n      }\n    }\n  }\n\n  WebStyleSheet.prototype.containsRule = function containsRule(rule) {\n    return this._cssRules.indexOf(rule) > -1;\n  };\n\n  WebStyleSheet.prototype.insertRuleOnce = function insertRuleOnce(rule, position) {\n    // Reduce chance of duplicate rules\n    if (!this.containsRule(rule)) {\n      this._cssRules.push(rule); // Check whether a rule was part of any prerendered styles (textContent\n      // doesn't include styles injected via 'insertRule')\n\n\n      if (this._textContent.indexOf(rule) === -1 && this._sheet) {\n        var pos = position || this._sheet.cssRules.length;\n\n        try {\n          this._sheet.insertRule(rule, pos);\n        } catch (e) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn('Failed to inject CSS: \"' + rule + '\". The browser may have rejecting unrecognized vendor prefixes. (This should have no user-facing impact.)');\n          }\n        }\n      }\n    }\n  };\n\n  _createClass(WebStyleSheet, [{\n    key: 'cssText',\n    get: function get() {\n      return this._cssRules.join('\\n');\n    }\n  }]);\n\n  return WebStyleSheet;\n}();\n\nvar _default = WebStyleSheet;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_createClass, \"_createClass\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\StyleSheet\\\\WebStyleSheet.js\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\StyleSheet\\\\WebStyleSheet.js\");\n  reactHotLoader.register(WebStyleSheet, \"WebStyleSheet\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\StyleSheet\\\\WebStyleSheet.js\");\n  reactHotLoader.register(_default, \"default\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\StyleSheet\\\\WebStyleSheet.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}