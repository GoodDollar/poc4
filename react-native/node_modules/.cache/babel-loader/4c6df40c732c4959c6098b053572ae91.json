{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport createElement from '../createElement';\nimport { getAssetByID } from '../../modules/AssetRegistry';\nimport resolveShadowValue from '../StyleSheet/resolveShadowValue';\nimport ImageLoader from '../../modules/ImageLoader';\nimport ImageResizeMode from './ImageResizeMode';\nimport ImageSourcePropType from './ImageSourcePropType';\nimport ImageStylePropTypes from './ImageStylePropTypes';\nimport ImageUriCache from './ImageUriCache';\nimport StyleSheet from '../StyleSheet';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { bool, func, number, oneOf, shape } from 'prop-types';\nimport React, { Component } from 'react';\nvar emptyObject = {};\nvar STATUS_ERRORED = 'ERRORED';\nvar STATUS_LOADED = 'LOADED';\nvar STATUS_LOADING = 'LOADING';\nvar STATUS_PENDING = 'PENDING';\nvar STATUS_IDLE = 'IDLE';\n\nvar getImageState = function getImageState(uri, shouldDisplaySource) {\n  return shouldDisplaySource ? STATUS_LOADED : uri ? STATUS_PENDING : STATUS_IDLE;\n};\n\nvar resolveAssetDimensions = function resolveAssetDimensions(source) {\n  if (typeof source === 'number') {\n    var _getAssetByID = getAssetByID(source),\n        height = _getAssetByID.height,\n        width = _getAssetByID.width;\n\n    return {\n      height: height,\n      width: width\n    };\n  } else if (typeof source === 'object') {\n    var _height = source.height,\n        _width = source.width;\n    return {\n      height: _height,\n      width: _width\n    };\n  }\n};\n\nvar svgDataUriPattern = /^(data:image\\/svg\\+xml;utf8,)(.*)/;\n\nvar resolveAssetUri = function resolveAssetUri(source) {\n  var uri = '';\n\n  if (typeof source === 'number') {\n    // get the URI from the packager\n    var asset = getAssetByID(source);\n    var scale = asset.scales[0];\n    var scaleSuffix = scale !== 1 ? '@' + scale + 'x' : '';\n    uri = asset ? asset.httpServerLocation + '/' + asset.name + scaleSuffix + '.' + asset.type : '';\n  } else if (typeof source === 'string') {\n    uri = source;\n  } else if (source && typeof source.uri === 'string') {\n    uri = source.uri;\n  }\n\n  if (uri) {\n    var match = uri.match(svgDataUriPattern); // inline SVG markup may contain characters (e.g., #, \") that need to be escaped\n\n    if (match) {\n      var prefix = match[1],\n          svg = match[2];\n      var encodedSvg = encodeURIComponent(svg);\n      return '' + prefix + encodedSvg;\n    }\n  }\n\n  return uri;\n};\n\nvar filterId = 0;\n\nvar createTintColorSVG = function createTintColorSVG(tintColor, id) {\n  return tintColor && id != null ? React.createElement('svg', {\n    style: {\n      position: 'absolute',\n      height: 0,\n      visibility: 'hidden',\n      width: 0\n    }\n  }, React.createElement('defs', null, React.createElement('filter', {\n    id: 'tint-' + id\n  }, React.createElement('feFlood', {\n    floodColor: '' + tintColor\n  }), React.createElement('feComposite', {\n    in2: 'SourceAlpha',\n    operator: 'atop'\n  })))) : null;\n};\n\nvar Image = function (_Component) {\n  _inherits(Image, _Component);\n\n  Image.getSize = function getSize(uri, success, failure) {\n    ImageLoader.getSize(uri, success, failure);\n  };\n\n  Image.prefetch = function prefetch(uri) {\n    return ImageLoader.prefetch(uri);\n  };\n\n  function Image(props, context) {\n    _classCallCheck(this, Image); // If an image has been loaded before, render it immediately\n\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this._filterId = 0;\n    _this._imageRef = null;\n    _this._imageRequestId = null;\n    _this._imageState = null;\n    _this._isMounted = false;\n\n    _this._createLayoutHandler = function (resizeMode) {\n      var onLayout = _this.props.onLayout;\n\n      if (resizeMode === 'center' || resizeMode === 'repeat' || onLayout) {\n        return function (e) {\n          var layout = e.nativeEvent.layout;\n          onLayout && onLayout(e);\n\n          _this.setState(function () {\n            return {\n              layout: layout\n            };\n          });\n        };\n      }\n    };\n\n    _this._getBackgroundSize = function (resizeMode) {\n      if (_this._imageRef && (resizeMode === 'center' || resizeMode === 'repeat')) {\n        var _this$_imageRef = _this._imageRef,\n            naturalHeight = _this$_imageRef.naturalHeight,\n            naturalWidth = _this$_imageRef.naturalWidth;\n        var _this$state$layout = _this.state.layout,\n            height = _this$state$layout.height,\n            width = _this$state$layout.width;\n\n        if (naturalHeight && naturalWidth && height && width) {\n          var scaleFactor = Math.min(1, width / naturalWidth, height / naturalHeight);\n          var x = Math.ceil(scaleFactor * naturalWidth);\n          var y = Math.ceil(scaleFactor * naturalHeight);\n          return {\n            backgroundSize: x + 'px ' + y + 'px'\n          };\n        }\n      }\n    };\n\n    _this._onError = function () {\n      var _this$props = _this.props,\n          onError = _this$props.onError,\n          source = _this$props.source;\n\n      _this._updateImageState(STATUS_ERRORED);\n\n      if (onError) {\n        onError({\n          nativeEvent: {\n            error: 'Failed to load resource ' + resolveAssetUri(source) + ' (404)'\n          }\n        });\n      }\n\n      _this._onLoadEnd();\n    };\n\n    _this._onLoad = function (e) {\n      var _this$props2 = _this.props,\n          onLoad = _this$props2.onLoad,\n          source = _this$props2.source;\n      var event = {\n        nativeEvent: e\n      };\n      ImageUriCache.add(resolveAssetUri(source));\n\n      _this._updateImageState(STATUS_LOADED);\n\n      if (onLoad) {\n        onLoad(event);\n      }\n\n      _this._onLoadEnd();\n    };\n\n    _this._setImageRef = function (ref) {\n      _this._imageRef = ref;\n    };\n\n    var uri = resolveAssetUri(props.source);\n    var shouldDisplaySource = ImageUriCache.has(uri);\n    _this.state = {\n      layout: {},\n      shouldDisplaySource: shouldDisplaySource\n    };\n    _this._imageState = getImageState(uri, shouldDisplaySource);\n    _this._filterId = filterId;\n    filterId++;\n    return _this;\n  }\n\n  Image.prototype.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n\n    if (this._imageState === STATUS_PENDING) {\n      this._createImageLoader();\n    } else if (this._imageState === STATUS_LOADED) {\n      this._onLoad({\n        target: this._imageRef\n      });\n    }\n  };\n\n  Image.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevUri = resolveAssetUri(prevProps.source);\n    var uri = resolveAssetUri(this.props.source);\n\n    if (prevUri !== uri) {\n      ImageUriCache.remove(prevUri);\n      var isPreviouslyLoaded = ImageUriCache.has(uri);\n      isPreviouslyLoaded && ImageUriCache.add(uri);\n\n      this._updateImageState(getImageState(uri, isPreviouslyLoaded));\n    }\n\n    if (this._imageState === STATUS_PENDING) {\n      this._createImageLoader();\n    }\n  };\n\n  Image.prototype.componentWillUnmount = function componentWillUnmount() {\n    var uri = resolveAssetUri(this.props.source);\n    ImageUriCache.remove(uri);\n\n    this._destroyImageLoader();\n\n    this._isMounted = false;\n  };\n\n  Image.prototype.render = function render() {\n    var shouldDisplaySource = this.state.shouldDisplaySource;\n\n    var _props = this.props,\n        accessibilityLabel = _props.accessibilityLabel,\n        accessible = _props.accessible,\n        blurRadius = _props.blurRadius,\n        defaultSource = _props.defaultSource,\n        draggable = _props.draggable,\n        source = _props.source,\n        testID = _props.testID,\n        capInsets = _props.capInsets,\n        onError = _props.onError,\n        onLayout = _props.onLayout,\n        onLoad = _props.onLoad,\n        onLoadEnd = _props.onLoadEnd,\n        onLoadStart = _props.onLoadStart,\n        resizeMethod = _props.resizeMethod,\n        resizeMode = _props.resizeMode,\n        other = _objectWithoutProperties(_props, ['accessibilityLabel', 'accessible', 'blurRadius', 'defaultSource', 'draggable', 'source', 'testID', 'capInsets', 'onError', 'onLayout', 'onLoad', 'onLoadEnd', 'onLoadStart', 'resizeMethod', 'resizeMode']);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.props.src) {\n        console.warn('The <Image> component requires a `source` property rather than `src`.');\n      }\n\n      if (this.props.children) {\n        throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');\n      }\n    }\n\n    var selectedSource = shouldDisplaySource ? source : defaultSource;\n    var displayImageUri = resolveAssetUri(selectedSource);\n    var imageSizeStyle = resolveAssetDimensions(selectedSource);\n    var backgroundImage = displayImageUri ? 'url(\"' + displayImageUri + '\")' : null;\n    var flatStyle = Object.assign({}, StyleSheet.flatten(this.props.style));\n    var finalResizeMode = resizeMode || flatStyle.resizeMode || ImageResizeMode.cover; // CSS filters\n\n    var filters = [];\n    var tintColor = flatStyle.tintColor;\n\n    if (flatStyle.filter) {\n      filters.push(flatStyle.filter);\n    }\n\n    if (blurRadius) {\n      filters.push('blur(' + blurRadius + 'px)');\n    }\n\n    if (flatStyle.shadowOffset) {\n      var shadowString = resolveShadowValue(flatStyle);\n\n      if (shadowString) {\n        filters.push('drop-shadow(' + shadowString + ')');\n      }\n    }\n\n    if (flatStyle.tintColor) {\n      filters.push('url(#tint-' + this._filterId + ')');\n    } // these styles were converted to filters\n\n\n    delete flatStyle.shadowColor;\n    delete flatStyle.shadowOpacity;\n    delete flatStyle.shadowOffset;\n    delete flatStyle.shadowRadius;\n    delete flatStyle.tintColor; // these styles are not supported on View\n\n    delete flatStyle.overlayColor;\n    delete flatStyle.resizeMode; // Accessibility image allows users to trigger the browser's image context menu\n\n    var hiddenImage = displayImageUri ? createElement('img', {\n      alt: accessibilityLabel || '',\n      draggable: draggable || false,\n      ref: this._setImageRef,\n      src: displayImageUri,\n      style: styles.accessibilityImage\n    }) : null;\n    return React.createElement(View, _extends({}, other, {\n      accessibilityLabel: accessibilityLabel,\n      accessible: accessible,\n      onLayout: this._createLayoutHandler(finalResizeMode),\n      style: [styles.root, this.context.isInAParentText && styles.inline, imageSizeStyle, flatStyle],\n      testID: testID\n    }), React.createElement(View, {\n      style: [styles.image, resizeModeStyles[finalResizeMode], this._getBackgroundSize(finalResizeMode), backgroundImage && {\n        backgroundImage: backgroundImage\n      }, filters.length > 0 && {\n        filter: filters.join(' ')\n      }]\n    }), hiddenImage, createTintColorSVG(tintColor, this._filterId));\n  };\n\n  Image.prototype._createImageLoader = function _createImageLoader() {\n    var source = this.props.source;\n\n    this._destroyImageLoader();\n\n    var uri = resolveAssetUri(source);\n    this._imageRequestId = ImageLoader.load(uri, this._onLoad, this._onError);\n\n    this._onLoadStart();\n  };\n\n  Image.prototype._destroyImageLoader = function _destroyImageLoader() {\n    if (this._imageRequestId) {\n      ImageLoader.abort(this._imageRequestId);\n      this._imageRequestId = null;\n    }\n  };\n\n  Image.prototype._onLoadEnd = function _onLoadEnd() {\n    var onLoadEnd = this.props.onLoadEnd;\n\n    if (onLoadEnd) {\n      onLoadEnd();\n    }\n  };\n\n  Image.prototype._onLoadStart = function _onLoadStart() {\n    var onLoadStart = this.props.onLoadStart;\n\n    this._updateImageState(STATUS_LOADING);\n\n    if (onLoadStart) {\n      onLoadStart();\n    }\n  };\n\n  Image.prototype._updateImageState = function _updateImageState(status) {\n    this._imageState = status;\n    var shouldDisplaySource = this._imageState === STATUS_LOADED || this._imageState === STATUS_LOADING; // only triggers a re-render when the image is loading (to support PJEG), loaded, or failed\n\n    if (shouldDisplaySource !== this.state.shouldDisplaySource) {\n      if (this._isMounted) {\n        this.setState(function () {\n          return {\n            shouldDisplaySource: shouldDisplaySource\n          };\n        });\n      }\n    }\n  };\n\n  return Image;\n}(Component);\n\nImage.displayName = 'Image';\nImage.contextTypes = {\n  isInAParentText: bool\n};\nImage.defaultProps = {\n  style: emptyObject\n};\nImage.resizeMode = ImageResizeMode;\nImage.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, ViewPropTypes, {\n  blurRadius: number,\n  defaultSource: ImageSourcePropType,\n  draggable: bool,\n  onError: func,\n  onLayout: func,\n  onLoad: func,\n  onLoadEnd: func,\n  onLoadStart: func,\n  resizeMode: oneOf(Object.keys(ImageResizeMode)),\n  source: ImageSourcePropType,\n  style: StyleSheetPropType(ImageStylePropTypes),\n  // compatibility with React Native\n\n  /* eslint-disable react/sort-prop-types */\n  capInsets: shape({\n    top: number,\n    left: number,\n    bottom: number,\n    right: number\n  }),\n  resizeMethod: oneOf(['auto', 'resize', 'scale'])\n  /* eslint-enable react/sort-prop-types */\n\n}) : {};\nvar styles = StyleSheet.create({\n  root: {\n    flexBasis: 'auto',\n    overflow: 'hidden',\n    zIndex: 0\n  },\n  inline: {\n    display: 'inline-flex'\n  },\n  image: Object.assign({}, StyleSheet.absoluteFillObject, {\n    backgroundColor: 'transparent',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    zIndex: -1\n  }),\n  accessibilityImage: Object.assign({}, StyleSheet.absoluteFillObject, {\n    height: '100%',\n    opacity: 0,\n    width: '100%',\n    zIndex: -1\n  })\n});\nvar resizeModeStyles = StyleSheet.create({\n  center: {\n    backgroundSize: 'auto'\n  },\n  contain: {\n    backgroundSize: 'contain'\n  },\n  cover: {\n    backgroundSize: 'cover'\n  },\n  none: {\n    backgroundPosition: '0 0',\n    backgroundSize: 'auto'\n  },\n  repeat: {\n    backgroundPosition: '0 0',\n    backgroundRepeat: 'repeat',\n    backgroundSize: 'auto'\n  },\n  stretch: {\n    backgroundSize: '100% 100%'\n  }\n});\n\nvar _default = applyNativeMethods(Image);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_extends, \"_extends\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(_objectWithoutProperties, \"_objectWithoutProperties\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(emptyObject, \"emptyObject\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(STATUS_ERRORED, \"STATUS_ERRORED\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(STATUS_LOADED, \"STATUS_LOADED\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(STATUS_LOADING, \"STATUS_LOADING\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(STATUS_PENDING, \"STATUS_PENDING\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(STATUS_IDLE, \"STATUS_IDLE\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(getImageState, \"getImageState\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(resolveAssetDimensions, \"resolveAssetDimensions\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(svgDataUriPattern, \"svgDataUriPattern\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(resolveAssetUri, \"resolveAssetUri\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(filterId, \"filterId\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(createTintColorSVG, \"createTintColorSVG\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(Image, \"Image\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(styles, \"styles\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(resizeModeStyles, \"resizeModeStyles\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n  reactHotLoader.register(_default, \"default\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Image\\\\index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}