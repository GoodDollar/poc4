{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule NativeEventEmitter\n * \n */\n'use strict';\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport EventEmitter from '../emitter/EventEmitter';\nimport Platform from '../../../exports/Platform';\nimport invariant from 'fbjs/lib/invariant';\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\n\nvar NativeEventEmitter = function (_EventEmitter) {\n  _inherits(NativeEventEmitter, _EventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    _classCallCheck(this, NativeEventEmitter);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n\n    return _this;\n  }\n\n  NativeEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  NativeEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    invariant(eventType, 'eventType argument is required.');\n    var count = this.listeners(eventType).length;\n\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  NativeEventEmitter.prototype.removeSubscription = function removeSubscription(subscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n\n    _EventEmitter.prototype.removeSubscription.call(this, subscription);\n  };\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nvar _default = NativeEventEmitter;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\vendor\\\\react-native\\\\NativeEventEmitter\\\\index.js\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\vendor\\\\react-native\\\\NativeEventEmitter\\\\index.js\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\vendor\\\\react-native\\\\NativeEventEmitter\\\\index.js\");\n  reactHotLoader.register(NativeEventEmitter, \"NativeEventEmitter\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\vendor\\\\react-native\\\\NativeEventEmitter\\\\index.js\");\n  reactHotLoader.register(_default, \"default\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\vendor\\\\react-native\\\\NativeEventEmitter\\\\index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}