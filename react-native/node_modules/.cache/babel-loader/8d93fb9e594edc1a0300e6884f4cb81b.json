{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar Class = require('../../core/class');\n\nvar Container = require('../../dom/container');\n\nvar Element = require('../../dom/native');\n\nvar fps = 1000 / 60,\n    invalids = [],\n    renderTimer,\n    renderInvalids = function renderInvalids() {\n  clearTimeout(renderTimer);\n  renderTimer = null;\n  var canvases = invalids;\n  invalids = [];\n\n  for (var i = 0, l = canvases.length; i < l; i++) {\n    var c = canvases[i];\n    c._valid = true;\n    c.render();\n  }\n};\n\nvar resolution = typeof window !== 'undefined' && window.devicePixelRatio || 1;\nvar previousHit = null,\n    previousHitSurface = null;\nvar CanvasSurface = Class(Element, Container, {\n  initialize: function initialize(width, height, existingElement) {\n    var element = this.element = existingElement || document.createElement('canvas');\n    var context = this.context = element.getContext('2d');\n    this._valid = true;\n    if (width != null && height != null) this.resize(width, height);\n    element.addEventListener('mousemove', this, false);\n    element.addEventListener('mouseout', this, false);\n    element.addEventListener('mouseover', this, false);\n    element.addEventListener('mouseup', this, false);\n    element.addEventListener('mousedown', this, false);\n    element.addEventListener('click', this, false);\n  },\n  handleEvent: function handleEvent(event) {\n    if (event.clientX == null) return;\n    var element = this.element,\n        rect = element.getBoundingClientRect(),\n        x = event.clientX - rect.left - element.clientLeft,\n        y = event.clientY - rect.top - element.clientTop,\n        hit = this.hitTest(x, y);\n\n    if (hit !== previousHit) {\n      if (previousHit) {\n        previousHit.dispatch({\n          type: 'mouseout',\n          target: previousHit,\n          relatedTarget: hit,\n          sourceEvent: event\n        });\n      }\n\n      if (hit) {\n        hit.dispatch({\n          type: 'mouseover',\n          target: hit,\n          relatedTarget: previousHit,\n          sourceEvent: event\n        });\n      }\n\n      previousHit = hit;\n      previousHitSurface = this;\n      this.refreshCursor();\n    }\n\n    if (hit) hit.dispatch(event);\n  },\n  refreshCursor: function refreshCursor() {\n    if (previousHitSurface !== this) return;\n    var hit = previousHit,\n        hitCursor = '',\n        hitTooltip = '';\n\n    while (hit) {\n      if (!hitCursor && hit._cursor) {\n        hitCursor = hit._cursor;\n        if (hitTooltip) break;\n      }\n\n      if (!hitTooltip && hit._tooltip) {\n        hitTooltip = hit._tooltip;\n        if (hitCursor) break;\n      }\n\n      hit = hit.parentNode;\n    } // TODO: No way to set cursor/title on the surface\n\n\n    this.element.style.cursor = hitCursor;\n    this.element.title = hitTooltip;\n  },\n  resize: function resize(width, height) {\n    var element = this.element;\n    element.setAttribute('width', width * resolution);\n    element.setAttribute('height', height * resolution);\n    element.style.width = width + 'px';\n    element.style.height = height + 'px';\n    this.width = width;\n    this.height = height;\n    return this;\n  },\n  invalidate: function invalidate(left, top, width, height) {\n    if (this._valid) {\n      this._valid = false;\n      invalids.push(this);\n\n      if (!renderTimer) {\n        if (window.mozRequestAnimationFrame) {\n          renderTimer = true;\n          window.mozRequestAnimationFrame(renderInvalids);\n        } else {\n          renderTimer = setTimeout(renderInvalids, fps);\n        }\n      }\n    }\n\n    return this;\n  },\n  hitTest: function hitTest(x, y) {\n    if (x < 0 || y < 0 || x > this.width || y > this.height) return null;\n    var node = this.lastChild;\n\n    while (node) {\n      var hit = node.hitTest(x, y);\n      if (hit) return hit;\n      node = node.previousSibling;\n    }\n\n    return null;\n  },\n  render: function render() {\n    var node = this.firstChild,\n        context = this.context;\n    context.setTransform(resolution, 0, 0, resolution, 0, 0);\n    context.clearRect(0, 0, this.width, this.height);\n\n    while (node) {\n      node.renderTo(context, resolution, 0, 0, resolution, 0, 0);\n      node = node.nextSibling;\n    }\n\n    this.refreshCursor();\n  }\n});\nCanvasSurface.tagName = 'canvas';\nmodule.exports = CanvasSurface;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(fps, \"fps\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n  reactHotLoader.register(invalids, \"invalids\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n  reactHotLoader.register(renderTimer, \"renderTimer\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n  reactHotLoader.register(renderInvalids, \"renderInvalids\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n  reactHotLoader.register(resolution, \"resolution\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n  reactHotLoader.register(previousHit, \"previousHit\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n  reactHotLoader.register(previousHitSurface, \"previousHitSurface\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n  reactHotLoader.register(CanvasSurface, \"CanvasSurface\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\canvas\\\\surface.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}