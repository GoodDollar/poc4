{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport TextStylePropTypes from './TextStylePropTypes';\nimport { any, array, bool, func, number, oneOf, oneOfType, string } from 'prop-types';\nvar TextPropTypes = {\n  accessibilityComponentType: string,\n  accessibilityLabel: string,\n  accessibilityLiveRegion: oneOf(['assertive', 'none', 'polite']),\n  accessibilityRole: oneOf(['button', 'heading', 'label', 'link', 'listitem']),\n  accessibilityTraits: oneOfType([array, string]),\n  accessible: bool,\n  children: any,\n  importantForAccessibility: oneOf(['auto', 'no', 'no-hide-descendants', 'yes']),\n  nativeID: string,\n  numberOfLines: number,\n  onBlur: func,\n  onContextMenu: func,\n  onFocus: func,\n  onLayout: func,\n  onPress: func,\n  selectable: bool,\n  style: StyleSheetPropType(TextStylePropTypes),\n  testID: string\n};\nvar _default = TextPropTypes;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TextPropTypes, \"TextPropTypes\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Text\\\\TextPropTypes.js\");\n  reactHotLoader.register(_default, \"default\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\react-native-web\\\\dist\\\\exports\\\\Text\\\\TextPropTypes.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}