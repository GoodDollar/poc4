{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar Class = require('../../core/class');\n\nvar Base = require('./base');\n\nvar Path = require('./path');\n\nvar DOM = require('./dom');\n\nvar precision = 100;\nmodule.exports = Class(Base, {\n  base_initialize: Base.prototype.initialize,\n  initialize: function initialize(path, width, height) {\n    this.base_initialize('shape');\n    var p = this.pathElement = DOM.createElement('path');\n    p.gradientshapeok = true;\n    this.element.appendChild(p);\n    this.width = width;\n    this.height = height;\n    if (path != null) this.draw(path);\n  },\n  // SVG to VML\n  draw: function draw(path, width, height) {\n    if (!(path instanceof Path)) path = new Path(path);\n    this._vml = path.toVML(); //this._size = path.measure();\n\n    if (width != null) this.width = width;\n    if (height != null) this.height = height;\n    if (!this._boxCoords) this._transform();\n\n    this._redraw(this._prefix, this._suffix);\n\n    return this;\n  },\n  // radial gradient workaround\n  _redraw: function _redraw(prefix, suffix) {\n    var vml = this._vml || '';\n    this._prefix = prefix;\n    this._suffix = suffix;\n\n    if (prefix) {\n      vml = [prefix, vml, suffix, // Don't stroke the path with the extra ellipse, redraw the stroked path separately\n      'ns e', vml, 'nf'].join(' ');\n    }\n\n    this.element.path = vml + 'e';\n  },\n  fillRadial: function fillRadial(stops, focusX, focusY, radiusX, radiusY, centerX, centerY) {\n    var fill = this._createGradient('gradientradial', stops);\n\n    if (focusX == null) focusX = (this.left || 0) + (this.width || 0) * 0.5;\n    if (focusY == null) focusY = (this.top || 0) + (this.height || 0) * 0.5;\n    if (radiusY == null) radiusY = radiusX || this.height * 0.5 || 0;\n    if (radiusX == null) radiusX = (this.width || 0) * 0.5;\n    if (centerX == null) centerX = focusX;\n    if (centerY == null) centerY = focusY;\n    centerX += centerX - focusX;\n    centerY += centerY - focusY;\n    var cx = Math.round(centerX * precision),\n        cy = Math.round(centerY * precision),\n        rx = Math.round(radiusX * 2 * precision),\n        ry = Math.round(radiusY * 2 * precision),\n        arc = ['wa', cx - rx, cy - ry, cx + rx, cy + ry].join(' ');\n\n    this._redraw( // Resolve rendering bug\n    ['m', cx, cy - ry, 'l', cx, cy - ry].join(' '), // Draw an ellipse around the path to force an elliptical gradient on any shape\n    ['m', cx, cy - ry, arc, cx, cy - ry, cx, cy + ry, arc, cx, cy + ry, cx, cy - ry, arc, cx, cy - ry, cx, cy + ry, arc, cx, cy + ry, cx, cy - ry].join(' '));\n\n    this._boxCoords = {\n      left: focusX - 2,\n      top: focusY - 2,\n      width: 4,\n      height: 4\n    };\n    fill.focusposition = '0.5,0.5';\n    fill.focussize = '0 0';\n    fill.focus = '50%';\n\n    this._transform();\n\n    return this;\n  }\n});\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(precision, \"precision\", \"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\art\\\\modes\\\\vml\\\\shape.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}