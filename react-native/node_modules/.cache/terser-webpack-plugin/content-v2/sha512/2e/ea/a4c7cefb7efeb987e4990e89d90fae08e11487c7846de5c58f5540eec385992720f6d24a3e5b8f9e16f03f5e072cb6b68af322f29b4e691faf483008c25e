{"map":"{\"version\":3,\"sources\":[\"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\node_modules\\\\url-loader\\\\dist\\\\cjs.js??ref--6-oneOf-0!D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\src\\\\logo.png\",\"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\src\\\\serviceWorker.js\",\"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\src\\\\index.js\",\"D:\\\\projects\\\\gooddollar\\\\react-native-app\\\\GoodIdentity\\\\src\\\\App.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"config\",\"navigator\",\"publicUrl\",\"URL\",\"process\",\"window\",\"location\",\"href\",\"origin\",\"addEventListener\",\"swUrl\",\"concat\",\"isLocalhost\",\"fetch\",\"then\",\"response\",\"contentType\",\"headers\",\"get\",\"status\",\"indexOf\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\",\"reload\",\"registerValidSW\",\"catch\",\"console\",\"log\",\"checkValidServiceWorker\",\"Boolean\",\"hostname\",\"match\",\"register\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"onUpdate\",\"onSuccess\",\"error\",\"_react\",\"_interopRequireDefault\",\"_reactDom\",\"_App\",\"_interopRequireWildcard\",\"ReactDOM\",\"render\",\"default\",\"createElement\",\"document\",\"getElementById\",\"_reactNativeWeb\",\"_logo\",\"App\",\"spinValue\",\"Animated\",\"Value\",\"onClick\",\"wasRotated\",\"_this\",\"_value\",\"timing\",\"toValue\",\"duration\",\"easing\",\"Easing\",\"linear\",\"start\",\"spin\",\"this\",\"interpolate\",\"inputRange\",\"outputRange\",\"View\",\"style\",\"styles\",\"container\",\"Image\",\"source\",\"logo\",\"transform\",\"rotate\",\"Text\",\"title\",\"Platform\",\"OS\",\"TouchableHighlight\",\"onPress\",\"button\",\"underlayColor\",\"buttonText\",\"Component\",\"StyleSheet\",\"create\",\"flex\",\"backgroundColor\",\"alignItems\",\"justifyContent\",\"width\",\"height\",\"fontWeight\",\"fontSize\",\"borderRadius\",\"padding\",\"marginVertical\",\"marginTop\",\"color\",\"hotWrapper\",\"require\",\"hot\"],\"mappings\":\"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gHCsBjC,SAAkBC,GACvB,GAA6C,kBAAmBC,UAAW,CAEzE,IAAMC,EAAY,IAAIC,IAAIC,GAAwBC,OAAOC,SAASC,MAClE,GAAIL,EAAUM,SAAWH,OAAOC,SAASE,OAIvC,OAGFH,OAAOI,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAAC,OAAMP,GAAN,sBAEPQ,IAgEV,SAAiCF,EAAOV,GAEtCa,MAAMH,GACHI,KAAK,SAAAC,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CnB,UAAUoB,cAAcC,MAAMR,KAAK,SAAAS,GACjCA,EAAaC,aAAaV,KAAK,WAC7BT,OAAOC,SAASmB,aAKpBC,EAAgBhB,EAAOV,KAG1B2B,MAAM,WACLC,QAAQC,IACN,mEArFAC,CAAwBpB,EAAOV,GAI/BC,UAAUoB,cAAcC,MAAMR,KAAK,WACjCc,QAAQC,IACN,+GAMJH,EAAgBhB,EAAOV,oBA8ExB,WACD,kBAAmBC,WACrBA,UAAUoB,cAAcC,MAAMR,KAAK,SAAAS,GACjCA,EAAaC,gBAvHnB,IAAMZ,EAAcmB,QACW,cAA7B1B,OAAOC,SAAS0B,UAEe,UAA7B3B,OAAOC,SAAS0B,UAEhB3B,OAAOC,SAAS0B,SAASC,MACvB,2DAsCN,SAASP,EAAgBhB,EAAOV,GAC9BC,UAAUoB,cACPa,SAASxB,GACTI,KAAK,SAAAS,GACJA,EAAaY,cAAgB,WAC3B,IAAMC,EAAmBb,EAAac,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACftC,UAAUoB,cAAcmB,YAI1BZ,QAAQC,IACN,gHAKE7B,GAAUA,EAAOyC,UACnBzC,EAAOyC,SAASlB,KAMlBK,QAAQC,IAAI,sCAGR7B,GAAUA,EAAO0C,WACnB1C,EAAO0C,UAAUnB,UAO5BI,MAAM,SAAAgB,GACLf,QAAQe,MAAM,4CAA6CA,kFChGjEC,EAAAC,EAAA/C,EAAA,IACAgD,EAAAD,EAAA/C,EAAA,KACAA,EAAA,IACA,IAAAiD,EAAAF,EAAA/C,EAAA,KACAuB,EAAA2B,EAAAlD,EAAA,MAEAmD,EAAAA,QAASC,OAAON,EAAAO,QAAAC,cAACL,EAAAI,QAAD,MAASE,SAASC,eAAe,SAKjDjC,EAAcG,oNCXdoB,EAAAI,EAAAlD,EAAA,IACAyD,EAAAzD,EAAA,KASA0D,EAAAX,EAAA/C,EAAA,MAEM2D,mNACJlB,MAAQ,CACNmB,UAAW,IAAIC,EAAAA,SAASC,MAAM,MAGhCC,QAAU,WACR,IAAMC,EAA6C,IAAhCC,EAAKxB,MAAMmB,UAAUM,OACxCL,EAAAA,SAASM,OACPF,EAAKxB,MAAMmB,UACX,CACEQ,QAASJ,EAAa,EAAI,EAC1BK,SAAU,IACVC,OAAQC,EAAAA,OAAOC,SAEjBC,oFAIF,IAAMC,EAAOC,KAAKlC,MAAMmB,UAAUgB,YAAY,CAC5CC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,OAAQ,YAGxB,OACEhC,EAAAO,QAAAC,cAACG,EAAAsB,KAAD,CAAMC,MAAOC,EAAOC,WAClBpC,EAAAO,QAAAC,cAACG,EAAAI,SAASsB,MAAV,CAAgBC,OAAQC,EAAAA,QAAML,MAAO,CAACC,EAAOI,KAAM,CAAEC,UAAW,CAAC,CAACC,OAAQb,QAC1E5B,EAAAO,QAAAC,cAACG,EAAA+B,KAAD,CAAMR,MAAOC,EAAOQ,OAApB,+BACA3C,EAAAO,QAAAC,cAACG,EAAA+B,KAAD,KAAA,oDACA1C,EAAAO,QAAAC,cAACG,EAAA+B,KAAD,KAAA,+CACiB,QAAhBE,EAAAA,SAASC,IAAgB7C,EAAAO,QAAAC,cAACG,EAAA+B,KAAD,KAAA,gDAC1B1C,EAAAO,QAAAC,cAACG,EAAAmC,mBAAD,CACEC,QAASlB,KAAKZ,QACdiB,MAAOC,EAAOa,OACdC,cAAe,WAEfjD,EAAAO,QAAAC,cAACG,EAAA+B,KAAD,CAAMR,MAAOC,EAAOe,YAApB,wBAnCQC,EAAAA,WA0CZhB,EAASiB,EAAAA,WAAWC,OAAO,CAC/BjB,UAAW,CACTkB,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBlB,KAAM,CACJmB,MAAO,IACPC,OAAQ,KAEVhB,MAAO,CACLiB,WAAY,OACZC,SAAU,IAEZb,OAAQ,CACNc,aAAc,EACdC,QAAS,GACTC,eAAgB,GAChBC,UAAW,GACXV,gBAAiB,WAEnBL,WAAY,CACVgB,MAAO,OACPN,WAAY,OACZC,SAAU,MAIVM,EAAa,WAAA,OAAM,WAAA,OAAMtD,IACT,QAAhB+B,EAAAA,SAASC,KAEXsB,EADgBC,EAAQ,KAAhBC,WAGKF,EAAWnH,EAAXmH,CAAmBtD\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.7940e6ce.png\\\";\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"import React, { Component } from 'react';\\nimport {\\n  StyleSheet,\\n  Text,\\n  View,\\n  Platform,\\n  TouchableHighlight,\\n  Animated,\\n  Easing,\\n} from 'react-native';\\nimport logo from './logo.png';\\n\\nclass App extends Component {\\n  state = {\\n    spinValue: new Animated.Value(0),\\n  }\\n\\n  onClick = () => {\\n    const wasRotated = this.state.spinValue._value === 1;\\n    Animated.timing(\\n      this.state.spinValue,\\n      {\\n        toValue: wasRotated ? 0 : 1,\\n        duration: 250,\\n        easing: Easing.linear\\n      }\\n    ).start()\\n  }\\n\\n  render() {\\n    const spin = this.state.spinValue.interpolate({\\n      inputRange: [0, 1],\\n      outputRange: ['0deg', '360deg']\\n    });\\n\\n    return (\\n      <View style={styles.container}>\\n        <Animated.Image source={logo} style={[styles.logo, { transform: [{rotate: spin}] }]}/>\\n        <Text style={styles.title}>Create React Native Web App</Text>\\n        <Text>Open up src/App.js to start working on your app!</Text>\\n        <Text>Changes you make will automatically reload.</Text>\\n        {Platform.OS !== 'web' && <Text>Shake your phone to open the developer menu.</Text>}\\n        <TouchableHighlight\\n          onPress={this.onClick}\\n          style={styles.button}\\n          underlayColor={'#0A84D0'}\\n        >\\n          <Text style={styles.buttonText}>Rotate Logo</Text>\\n        </TouchableHighlight>\\n      </View>\\n    );\\n  }\\n}\\n\\nconst styles = StyleSheet.create({\\n  container: {\\n    flex: 1,\\n    backgroundColor: '#fff',\\n    alignItems: 'center',\\n    justifyContent: 'center',\\n  },\\n  logo: {\\n    width: 300,\\n    height: 300,\\n  },\\n  title: {\\n    fontWeight: 'bold',\\n    fontSize: 16,\\n  },\\n  button: {\\n    borderRadius: 3,\\n    padding: 20,\\n    marginVertical: 10,\\n    marginTop: 10,\\n    backgroundColor: '#1B95E0',\\n  },\\n  buttonText: {\\n    color: '#fff',\\n    fontWeight: 'bold',\\n    fontSize: 16,\\n  },\\n});\\n\\nlet hotWrapper = () => () => App;\\nif (Platform.OS === 'web') {\\n  const { hot } = require('react-hot-loader');\\n  hotWrapper = hot;\\n}\\nexport default hotWrapper(module)(App);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{115:function(e,t,n){e.exports=n.p+\"static/media/logo.7940e6ce.png\"},118:function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.register=function(e){if(\"serviceWorker\"in navigator){var t=new URL(\"\",window.location.href);if(t.origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var t=\"\".concat(\"\",\"/service-worker.js\");n?(!function(e,t){fetch(e).then(function(n){var a=n.headers.get(\"content-type\");404===n.status||null!=a&&-1===a.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):o(e,t)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(t,e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA\")})):o(t,e)})}},t.unregister=function(){\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})};var n=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function o(e,t){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.\"),t&&t.onUpdate&&t.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),t&&t.onSuccess&&t.onSuccess(e)))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}},73:function(e,t,n){e.exports=n(74)},74:function(e,t,n){var o=n(44),a=n(45),r=a(n(1)),i=a(n(15));n(78);var l=a(n(80)),c=o(n(118));i.default.render(r.default.createElement(l.default,null),document.getElementById(\"root\")),c.unregister()},78:function(e,t,n){},80:function(e,t,n){(function(e){var o=n(44),a=n(45);Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var r=a(n(82)),i=a(n(83)),l=a(n(84)),c=a(n(87)),u=a(n(88)),s=o(n(1)),f=n(119),d=a(n(115)),g=function(e){function t(){var e,n;(0,r.default)(this,t);for(var o=arguments.length,a=new Array(o),i=0;i<o;i++)a[i]=arguments[i];return(n=(0,l.default)(this,(e=(0,c.default)(t)).call.apply(e,[this].concat(a)))).state={spinValue:new f.Animated.Value(0)},n.onClick=function(){var e=1===n.state.spinValue._value;f.Animated.timing(n.state.spinValue,{toValue:e?0:1,duration:250,easing:f.Easing.linear}).start()},n}return(0,u.default)(t,e),(0,i.default)(t,[{key:\"render\",value:function(){var e=this.state.spinValue.interpolate({inputRange:[0,1],outputRange:[\"0deg\",\"360deg\"]});return s.default.createElement(f.View,{style:h.container},s.default.createElement(f.Animated.Image,{source:d.default,style:[h.logo,{transform:[{rotate:e}]}]}),s.default.createElement(f.Text,{style:h.title},\"Create React Native Web App\"),s.default.createElement(f.Text,null,\"Open up src/App.js to start working on your app!\"),s.default.createElement(f.Text,null,\"Changes you make will automatically reload.\"),\"web\"!==f.Platform.OS&&s.default.createElement(f.Text,null,\"Shake your phone to open the developer menu.\"),s.default.createElement(f.TouchableHighlight,{onPress:this.onClick,style:h.button,underlayColor:\"#0A84D0\"},s.default.createElement(f.Text,{style:h.buttonText},\"Rotate Logo\")))}}]),t}(s.Component),h=f.StyleSheet.create({container:{flex:1,backgroundColor:\"#fff\",alignItems:\"center\",justifyContent:\"center\"},logo:{width:300,height:300},title:{fontWeight:\"bold\",fontSize:16},button:{borderRadius:3,padding:20,marginVertical:10,marginTop:10,backgroundColor:\"#1B95E0\"},buttonText:{color:\"#fff\",fontWeight:\"bold\",fontSize:16}}),p=function(){return function(){return g}};\"web\"===f.Platform.OS&&(p=n(116).hot);var v=p(e)(g);t.default=v}).call(this,n(81)(e))}},[[73,2,1]]]);","extractedComments":[]}